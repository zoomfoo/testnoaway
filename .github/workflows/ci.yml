# This is a basic workflow to help you get started with Actions

name: test

on:
  push:
    branches: [ release/* ]

jobs:
  build:
    runs-on: macOS-10.14
    steps:
      - name: set golang
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
      - uses: actions/checkout@v2
      - name: Run a multi-line script
        run: make build-release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ env.TARABS }}
          asset_name: ${{ env.TARNAME }}
          asset_content_type: application/octet-stream